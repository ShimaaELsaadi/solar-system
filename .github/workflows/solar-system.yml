name: solar system workflow
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'
env:
      MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
      MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      REGISTRY_git: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

      
jobs:
    unit-testing:
        name: unit testing
        strategy:
          matrix:
            nodejs_version: [18,19,20]
            os:  [ubuntu-latest,macos-latest]
            execlude:
              - nodejs_version: 18
                os: macos-latest
        runs-on: ${{ matrix.os }}
        steps:
            - name: checkout
              uses: actions/checkout@v4
              
            - name: setup node js version ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs_version }}

            - name: install depend.
              run: npm install

            - name: unit test
              id: nodejs-unit-testing-steps 
              run: npm test

            - name: upload report to rtf
              if: failure() && steps.nodejs-unit-testing-steps.outcome == 'failure' || steps.nodejs-unit-testing-steps.outcome == 'success'
              #if:alwyse()
              uses: actions/upload-artifact@v3
              with:
                name: report-test.txt
                path: test-results.xml

    code_caverage:
                  name: unit testing
                  runs-on: ubuntu-latest
                  #needs: unit-testing
                  steps:
                      - name: checkout
                        uses: actions/checkout@v4
                        
                      - name: setup node js version 18
                        uses: actions/setup-node@v3
                        with:
                          node-version: 18
          
                      - name: install depend.
                        run: npm install
          
                      - name:  check code coverage
                        continue-on-error: true
                        run: npm run coverage
          
                      - name: upload report coverage to rtf 
                        uses: actions/upload-artifact@v3
                        with:
                          name: report-coverage.txt
                          path: coverage
                          retention-days: 5 
      
    Publish_Docker_image: 
      name: containerization
      needs: [code_caverage]   
      runs-on: ubuntu-latest

      permissions:
        packages: write
        contents: read
        attestations: write
        id-token: write
        
      steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: docker hub login
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKER_USER }}
                password: ${{ secrets.DOCKER_PASS }}  

            - name:  Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry:  ${{ env.REGISTRY_git }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN  }}  
    

            - name: build and push 
              uses: docker/build-push-action@v5
              with:
                context: .
                push: false
                tags: ${{ vars.DOCKER_USER }}/solar-system:${{ github.sha }}

            - name: docker image test
              run: |
                    docker images
                    docker run --name solar-system-app -d \
                    -p 3000:3000 \
                    -e MONGO_URI=$MONGO_URI \
                    -e MONGO_USERNAME=$MONGO_USERNAME \
                    -e MONGO_PASSWORD=$MONGO_PASSWORD \
                    ${{ vars.DOCKER_USER }}/solar-system:${{ github.sha }}
                    export IP=$(docker inspect -f '{{ range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                    echo $IP
                    #docker inspect solar-system-app |grep -i IPAddress
                    echo Testing Image URL using wget
                    wget -q -O - 127.0.0.1:3000/live | grep live                       
            - name: build and push to docker hub
              uses: docker/build-push-action@v5
              with:
                      context: .
                      push: true
                      tags: ${{ vars.DOCKER_USER }}/solar-system:${{ github.sha }}  

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: |
                          ${{ env.REGISTRY_git }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest
                          ${{ env.REGISTRY_git }}/${{ github.repository }}/ ${{ env.IMAGE_NAME }}:${{ github.sha }}